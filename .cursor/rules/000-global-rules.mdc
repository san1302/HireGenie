---
description: 
globs: 
alwaysApply: true
---
# Global Development Rules

## Core Confidence Rule
- Do not make any changes until you have 95% confidence that you know what to build
- Ask follow-up questions until you have that confidence
- Always analyze existing code thoroughly before suggesting changes
- Respect the project's coding style and patterns

## Authentication Caution
- Exercise extreme caution when modifying any authentication-related code
- This includes files in src/app/(auth)/* and src/app/auth/callback/*
- Always explain potential security implications before making changes
- Only proceed with explicit confirmation for auth-related changes
- Make minimal, targeted modifications to auth flows
- Thoroughly test authentication changes for edge cases

## Development Workflow
- Prefer small, incremental changes over large rewrites
- Provide clear explanations for your suggested changes
- When uncertain about requirements, ask for clarification
- Consider edge cases and potential bugs in your solutions

## Iterative Development
- Implement changes step by step, not all at once
- Explain the purpose and context of each step before implementing it
- Wait for feedback after each meaningful change before proceeding
- Ensure the user understands what's happening at each stage
- Focus on learning together, not just delivering a solution
- Break complex implementations into smaller, digestible parts
- ALWAYS pause after completing each full component change (not half-steps) and explicitly ask for feedback before proceeding to the next component

## Code Quality Standards
- Maintain consistent code style across files
- Write clear, descriptive comments
- Ensure proper error handling in all operations
- Follow best practices for Next.js, React, and TypeScript
- Consider performance implications of changes

## Project-Specific Guidance
- This is a Next.js 14 app with Supabase backend
- Uses App Router architecture
- Authentication is handled through Supabase Auth
- Payments are processed through Polar
- Components follow shadcn/ui architecture
